# this list references the following custom (and I think, accurately-named) functions:
# is_val? -> does the field have some (nonempty) value?
# has_val? -> does the field have the value specified?
# matches? -> does calling the given closure on the field return true?
# fields_are_same? -> do the two fields given have identical values?
# comp_has_val? -> does the component have some (nonempty) value?
# is_struct_num? -> does the value in the given field match the "structured numeric" (SN) format?
# is_numeric? -> does the value in the given field match the "numeric" (NM) format?
# is_text? -> does the value in the given field match the "text" (TX) format?
# is_timestamp? -> does the value in the given field match the "timestamp" (TS) format?
# rec[segment] -> does the record contain a segment of the given type?

#-------------Criteria for each message type-------------- #
  # LAB OUTPUT CRITERIA
  LAB_CRITERIA = [ EVENT, T_ID, ID_23, P_ID, ID_24, ATT, REF, TX_TYPE, SN_TYPE, NM_TYPE, OBS_ID, TX_VAL,
                   NM_VAL, SN_VAL, UNITS, REF_RG, FLAG_H, FLAG_I, FLAG_CH, FLAG_CL, FLAG_L, FLAG_A, FLAG_U,
                   FLAG_N, FLAG_C, PT_ID, NAME, DOB, SEX_M, SEX_F, SEX_O, VISIT_ID, SSN, ORD_NUM, SER_ID,
                   ORD_DT, ORD_MD, RES_ST_F, RES_ST_I, RES_ST_C, RES_ST_P, ATT_EQ_REF ] 
  
  # RAD OUTPUT CRITERIA
  RAD_CRITERIA = [ EVENT, SER_ID, T_ID, ID_23, TX_TYPE, SN_TYPE, NM_TYPE, TX_VAL, NM_VAL, SN_VAL, RES_DT, 
                   PT_ID, NAME, DOB, SEX_M, SEX_F, SEX_O, VISIT_ID, SSN, ORD_NUM, ORD_DT, ORD_MD, RES_ST, 
                   REASON, RACE, REP_ID_1, PT_CL_E, PT_LOC_ED, EMPTY_32, EMPTY_33, CTY_CD, ADDR_7, LANG,
                   MAR_ST, GDT_ID, IMP_ID, ADT_ID, IMP_VAL, ADT_VAL, TRANS_DT, RES_INT, EXAM_DT ] 
                     
  # ENCOUNTER OUTPUT CRITERIA
  ENC_CRITERIA = [ EVENT, PT_ID, VISIT_ID, PT_LOC, ADM_DT, NAME, DOB, SEX_M, SEX_F, SEX_O, SSN, PT_CL, ATT, DCH_DT,
                   P_ID, T_ID, ID_23, ID_24, RACE, CTY_CD, ADDR_7, LANG, MAR_ST, REL, CNS, ADM, ATT_SZ, REF_SZ,
                   ADM_SZ, CNS_SZ, ATT_EQ_REF, HOSP_SV, ADM_SC, PT_TYPE, FIN_CL, DCH_DISP, EVN ]

#-------------All Procs (Closures) used as criteria-------------- #				   
  IMP_PROC = Proc.new{ |val| val.include?( "IMPRESSION:" ) }
  ADT_PROC = Proc.new{ |val| val.include?( "ADDENDUM:" ) }
  DOC_SZ_PROC = Proc.new{ |val| val.size > 2 }

  # MSH fields
  EVENT = Proc.new{ |rec| has_val?(rec,"msh9") }
  P_ID = Proc.new{ |rec| is_val?(rec,"msh10","P") }
  T_ID = Proc.new{ |rec| is_val?(rec,"msh10","T") }
  ID_23 = Proc.new{ |rec| is_val?(rec,"msh11","2.3") }
  ID_24 = Proc.new{ |rec| is_val?(rec,"msh11","2.4") }
  
  # PV1
  PT_CL_E = Proc.new{ |rec| is_val?(rec,"pv12","E") }
  PT_CL = Proc.new{ |rec| has_val?(rec,"pvi1") }
  PT_LOC_ED = Proc.new{ |rec| is_val?(rec,"pv13","ED") }
  PT_LOC = Proc.new{ |rec| has_val?(rec,"pv13") }
  EMPTY_32 = Proc.new{ |rec| !comp_has_val?(rec,"pv13",2) }  
  EMPTY_33 = Proc.new{ |rec| !comp_has_val?(rec,"pv13",3) }  
  ATT = Proc.new{ |rec| has_val?(rec,"pv17") }
  REF = Proc.new{ |rec| has_val?(rec,"pv18") }
  CNS = Proc.new{ |rec| has_val?(rec,"pv19") }
  ADM = Proc.new{ |rec| has_val?(rec,"pv117") }
  ATT_SZ = Proc.new{ |rec| matches?(rec,"pv17",DOC_SZ_PROC) }
  REF_SZ = Proc.new{ |rec| matches?(rec,"pv18",DOC_SZ_PROC) }
  CNS_SZ = Proc.new{ |rec| matches?(rec,"pv19",DOC_SZ_PROC) }
  ADM_SZ = Proc.new{ |rec| matches?(rec,"pv117",DOC_SZ_PROC) }
  ATT_EQ_REF = Proc.new{ |rec| fields_are_same?(rec,"pv17","pv18") }
  HOSP_SV = Proc.new{ |rec| has_val?(rec,"pv110") }
  ADM_SC = Proc.new{ |rec| has_val?(rec,"pv114") }
  PT_TYPE = Proc.new{ |rec| has_val?(rec,"pv118") }
  FIN_CL = Proc.new{ |rec| has_val?(rec,"pv120") }
  DCH_DISP = Proc.new{ |rec| has_val?(rec,"pv136") }
  ADM_DT = Proc.new{ |rec| has_val?(rec,"pv144") }
  DCH_DT = Proc.new{ |rec| has_val?(rec,"pv145") }
  
  # OBX
  TX_TYPE = Proc.new{ |rec| is_val?(rec,"obx2","TX") }
  NM_TYPE = Proc.new{ |rec| is_val?(rec,"obx2","NM") }
  SN_TYPE = Proc.new{ |rec| is_val?(rec,"obx2","SN") }
  OBS_ID = Proc.new{ |rec| has_val?(rec,"obx3") }
  GDT_ID = Proc.new{ |rec| is_val?(rec,"obx3","&GDT") }
  IMP_ID = Proc.new{ |rec| is_val?(rec,"obx3","&IMP") }
  ADT_ID = Proc.new{ |rec| is_val?(rec,"obx3","&ADT") }
  IMP_VAL = Proc.new{ |rec| matches?(rec,"obx5",IMP_PROC) }
  ADT_VAL = Proc.new{ |rec| matches?(rec,"obx5",ADT_PROC) }
  SN_VAL = Proc.new{ |rec| 
    has_val?(rec,"obx2") &&
    HL7Test.is_struct_num?( rec[:OBX].value.to_s )
  }
  NM_VAL = Proc.new{ |rec| 
    has_val?(rec,"obx2") &&
    HL7Test.is_numeric?( rec[:OBX].value.to_s )
  }
  TX_VAL = Proc.new{ |rec| 
    has_val?(rec,"obx2") &&
    HL7Test.is_text?( rec[:OBX].value.to_s )
  }
  TS_VAL = Proc.new{ |rec| 
    has_val?(rec,"obx2") &&
    HL7Test.is_timestamp?( rec[:OBX].value.to_s )
  }
  UNITS = Proc.new{ |rec| has_val?(rec,"obx6") }
  REF_RG = Proc.new{ |rec| has_val?(rec,"obx7") }
  FLAG_H = Proc.new{ |rec| is_val?(rec,"obx8","H") }  
  FLAG_I = Proc.new{ |rec| is_val?(rec,"obx8","I") }
  FLAG_CH = Proc.new{ |rec| is_val?(rec,"obx8","CH") }
  FLAG_CL = Proc.new{ |rec| is_val?(rec,"obx8","CL") }
  FLAG_L = Proc.new{ |rec| is_val?(rec,"obx8","L") }
  FLAG_A = Proc.new{ |rec| is_val?(rec,"obx8","A") }
  FLAG_U = Proc.new{ |rec| is_val?(rec,"obx8","U") }
  FLAG_N = Proc.new{ |rec| is_val?(rec,"obx8","N") }
  FLAG_C = Proc.new{ |rec| is_val?(rec,"obx8","C") } 
  
  # PID
  PT_ID = Proc.new{ |rec| has_val?(rec,"pid3") } 
  NAME = Proc.new{ |rec| has_val?(rec,"pid5") }
  DOB = Proc.new{ |rec| has_val?(rec,"pid7") }
  SEX_M = Proc.new{ |rec| is_val?(rec,"pid8","M") }  
  SEX_F = Proc.new{ |rec| is_val?(rec,"pid8","F") }
  SEX_O = Proc.new{ |rec| is_val?(rec,"pid8","O") }  
  RACE = Proc.new{ |rec| has_val?(rec,"pid10") }
  ADDR = Proc.new{ |rec| has_val?(rec,"pid11") }  
  ADDR_7 = Proc.new{ |rec| comp_has_val?(rec,"pid11",7) }  
  CTY_CD = Proc.new{ |rec| has_val?(rec,"pid12") } 
  LANG = Proc.new{ |rec| has_val?(rec,"pid15") }
  MAR_ST = Proc.new{ |rec| has_val?(rec,"pid16") }  
  REL = Proc.new{ |rec| has_val?(rec,"pid17") } 
  VISIT_ID = Proc.new{ |rec| has_val?(rec,"pid18") || has_val?(rec,"pv119") }  
  SSN = Proc.new{ |rec| has_val?(rec,"pid19") }
   
  # ORC
  ORC_EXISTS = Proc.new{ |rec| rec[:ORC] } 
  ORD_ID = Proc.new{ |rec| has_val?(rec,"orc1") }
  TRANS_DT = Proc.new{ |rec| has_val?(rec,"orc9" ) }
  
  # OBR
  REP_ID_1 = Proc.new{ |rec| is_val?(rec,"obr1",1) } 
  ORD_NUM = Proc.new{ |rec| has_val?(rec,"obr3") }  
  SER_ID = Proc.new{ |rec| has_val?(rec,"obr4") } 
  ORD_DT = Proc.new{ |rec| has_val?(rec,"obr7") } 
  ORD_MD = Proc.new{ |rec| has_val?(rec,"obr16") }
  RES_DT = Proc.new{ |rec| has_val?(rec,"obr22") }
  RES_ST = Proc.new{ |rec| has_val?(rec,"obr25") } 
  RES_ST_F = Proc.new{ |rec| is_val?(rec,"obr25","F") }
  RES_ST_I = Proc.new{ |rec| is_val?(rec,"obr25","I") }
  RES_ST_C = Proc.new{ |rec| is_val?(rec,"obr25","C") }
  RES_ST_P = Proc.new{ |rec| is_val?(rec,"obr25","P") }
  EXAM_DT = Proc.new{ |rec| has_val?(rec,"obr27") } 
  REASON = Proc.new{ |rec| has_val?(rec,"obr31") }
  RES_INT = Proc.new{ |rec| has_val?(rec,"obr32") }
  
  # OTHER
  EVN = Proc.new{ |rec| rec[:EVN] }
  
#-------------Procs (Closures) referred to above-------------- #				   
  IMP_PROC = Proc.new{ |val| val.include?( "IMPRESSION:" ) }
  ADT_PROC = Proc.new{ |val| val.include?( "ADDENDUM:" ) }
  DOC_SZ_PROC = Proc.new{ |val| val.size > 2 }