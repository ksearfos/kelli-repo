require 'ruby-hl7'

class NamedSegment < HL7::Message::Segment
  
  @@segment_delim = '|'
  @@component_delim = '^'
  @fields = {}               # field => value
  @fields_by_index = {}      # index => field
  @components = {}           # field => []
                       
  def initialize( contents, fields )
    @fields_by_index = fields
    super(contents)
    
    # populate @fields
    cnt_ary = contents.split( '|' )
    for i in 0...cnt_ary.size()
      field = @fields_by_index[i+1]    # name of field; HL7 indices start at 1 but array indices start at 0
      @fields[field] = cnt_ary[i]      # { field => value }
    end
  end
  
  def [](fname)
    @fields[fname]
  end
  
  def component( field, index )
    @components[field][index]
  end
  
  private
  
  def parse_components(contents)
    cnt_ary = contents.split( @@segment_delim )
    
    for i in 0...cnt_ary.size()
      field = @fields_by_index[i+1]    # name of field; HL7 indices start at 1 but array indices start at 0
      value = cnt_ary[i]   
      
      @components[field] = value.split( @@component_delim ) if value.include?( @@component_delim )
      @fields[field] = value
    end   
  end
end
