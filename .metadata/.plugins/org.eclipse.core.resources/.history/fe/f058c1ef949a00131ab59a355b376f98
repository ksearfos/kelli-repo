require 'ruby-hl7'

def get_hl7( file )
  File.open( file ) { |f|
    f.gets.chop     # blank lines cause ParsingErrors
  }
end

class String
  # removes given characters == avoids the need to add the second argument every time
  def rem( chs )
    tr( chs, "" )
  end
  
  def rem!( chs )
    tr!( chs, "" )
  end
end

class HL7::Message::Segment
  def name
    to_s.match( /\[[A-Z]+\|/ )[0].rem( '|[' )
  end
  
  def text
    str = to_s.chomp( ']' )
    str.reverse.chomp( '[' ).reverse
  end
  
  def fields
    # text is something looking roughly like NAME|stuff|stuff|st1^2^3||more stuff
    text.split( @element_delim )[1..-1]   # get rid of name, since that's not an important field
  end
  
  def view_all
    all_entries.each{ |e|
      s = HL7::Message::Segment.new(e)
      puts s.fields
    }
    
  end
  
  # output looks something like 'NAME|stuff||stuff2|st1^2^^3|more stuff'
  def all_entries
    # have to split across comma-name because there might be commas in field values too
    # but then put the name back in for nice formatting
    text.split( ", #{name}" ).map{ |txt| txt =~ /^\|/ ? ( name + txt ) : txt }
  end
end
